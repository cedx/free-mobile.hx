<?php
/**
 * Generated by Haxe 4.1.2
 */

namespace free_mobile;

use \php\Boot;
use \sys\Http;
use \php\_Boot\HxString;
use \php\_Boot\HxClosure;
use \thenshim\_Promise\Promise_Impl_;
use \thenshim\Thenable;
use \haxe\io\Path;

/**
 * Sends messages by SMS to a [Free Mobile](https://mobile.free.fr) account.
 */
class Client {
	/**
	 * @var string
	 * The URL of the API end point.
	 */
	public $endPoint;
	/**
	 * @var \Closure
	 * The handler of "request" events.
	 * The intended usage is to bind this method to a custom function.
	 */
	public $onRequest;
	/**
	 * @var \Closure
	 * The handler of "response" events.
	 * The intended usage is to bind this method to a custom function.
	 */
	public $onResponse;
	/**
	 * @var string
	 * The identification key associated to the account.
	 */
	public $password;
	/**
	 * @var string
	 * The user name associated to the account.
	 */
	public $username;

	/**
	 * Creates a new client.
	 * 
	 * @param string $username
	 * @param string $password
	 * @param string $endPoint
	 * 
	 * @return void
	 */
	public function __construct ($username, $password, $endPoint = "https://smsapi.free-mobile.fr") {
		if (!$this->__hx__default__onRequest) {
			$this->__hx__default__onRequest = new HxClosure($this, 'onRequest');
			if ($this->onRequest === null) $this->onRequest = $this->__hx__default__onRequest;
		}
		if (!$this->__hx__default__onResponse) {
			$this->__hx__default__onResponse = new HxClosure($this, 'onResponse');
			if ($this->onResponse === null) $this->onResponse = $this->__hx__default__onResponse;
		}
		if ($endPoint === null) {
			$endPoint = "https://smsapi.free-mobile.fr";
		}
		$this->endPoint = Path::removeTrailingSlashes($endPoint);
		$this->password = $password;
		$this->username = $username;
	}

	/**
	 * The handler of "request" events.
	 * The intended usage is to bind this method to a custom function.
	 * 
	 * @return void
	 */
	public function onRequest ()
	{
		if ($this->onRequest !== $this->__hx__default__onRequest) return call_user_func_array($this->onRequest, func_get_args());
	}
	protected $__hx__default__onRequest;

	/**
	 * The handler of "response" events.
	 * The intended usage is to bind this method to a custom function.
	 * 
	 * @return void
	 */
	public function onResponse ()
	{
		if ($this->onResponse !== $this->__hx__default__onResponse) return call_user_func_array($this->onResponse, func_get_args());
	}
	protected $__hx__default__onResponse;

	/**
	 * Sends a SMS message to the underlying account.
	 * 
	 * @param string $text
	 * 
	 * @return Thenable
	 */
	public function sendMessage ($text) {
		$_gthis = $this;
		$message = HxString::substring(trim($text), 0, 160);
		$http = new Http("" . ($this->endPoint??'null') . "/sendmsg");
		$http->addParameter("msg", $message);
		$http->addParameter("pass", $this->password);
		$http->addParameter("user", $this->username);
		return Promise_Impl_::_new(function ($resolve, $reject) use (&$_gthis, &$http) {
			$_gthis->onRequest();
			$http->onBytes = function ($bytes) use (&$resolve, &$_gthis) {
				$_gthis->onResponse();
				$resolve(null);
			};
			$http->onError = function ($error) use (&$reject, &$http) {
				$reject(new ClientException($error, $http->url));
			};
			$http->request(false);
		});
	}
}

Boot::registerClass(Client::class, 'free_mobile.Client');

<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace tink\querystring;

use \php\Boot;
use \tink\url\_Portion\Portion_Impl_;
use \tink\querystring\_Builder\DefaultBuffer_Impl_;

class Builder0 {
	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @param string $prefix
	 * @param \Array_hx $buffer
	 * @param object $data
	 * 
	 * @return void
	 */
	public function process0 ($prefix, $buffer, $data) {
		$data1 = $data->msg;
		$name = Portion_Impl_::ofString(($prefix === "" ? "msg" : ($prefix??'null') . ".msg"));
		$value = Portion_Impl_::ofString($data1);
		$buffer->arr[$buffer->length++] = ($name??'null') . "=" . ($value??'null');
		$data1 = $data->pass;
		$name = Portion_Impl_::ofString(($prefix === "" ? "pass" : ($prefix??'null') . ".pass"));
		$value = Portion_Impl_::ofString($data1);
		$buffer->arr[$buffer->length++] = ($name??'null') . "=" . ($value??'null');
		$data1 = $data->user;
		$name = Portion_Impl_::ofString(($prefix === "" ? "user" : ($prefix??'null') . ".user"));
		$value = Portion_Impl_::ofString($data1);
		$buffer->arr[$buffer->length++] = ($name??'null') . "=" . ($value??'null');
	}

	/**
	 * @param object $data
	 * 
	 * @return string
	 */
	public function stringify ($data) {
		$buffer = new \Array_hx();
		$this->process0("", $buffer, $data);
		return DefaultBuffer_Impl_::flush($buffer);
	}
}

Boot::registerClass(Builder0::class, 'tink.querystring.Builder0');
